#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform AWS EFS

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-efs

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-efs.svg"
    url: "https://github.com/clouddrove/terraform-aws-efs/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-efs/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-efs/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.5.0"

providers:
  - name: aws
    url: https://aws.amazon.com/
    version: ">= 5.9.0"

module_dependencies: 
  - name: Labels Module
    url: https://github.com/clouddrove/terraform-aws-labels
    description: Provides resource tagging.

#  description of this project
description: |-
  Terraform module to create or deploy EFS on AWS.

# How to use this project
# How to use this project
usage : |-
  ### Simple Example
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
      module "efs" {
        source                    = "clouddrove/efs/aws"
        version                   = "1.3.0"
        name                      = "efs"
        creation_token            = "changeme"
        availability_zones        = local.availability_zones
        vpc_id                    = module.vpc.vpc_id
        subnets                   = module.subnets.public_subnet_id
        security_groups           = [module.vpc.vpc_default_security_group_id]
        efs_backup_policy_enabled = true
        allow_cidr                = ["10.0.0.0/16"] #vpc_cidr
        replication_configuration_destination = {
          region                 = "eu-west-2"
          availability_zone_name = ["eu-west-2a", "eu-west-2b"]
        }
  ```